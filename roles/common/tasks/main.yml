- name: Update all packages to the latest version
  apt:
    upgrade: dist
    update_cache: yes
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

- name: Unwanted packages
  apt:
    state: absent
    update_cache: yes
    purge: yes
    name: ['oracle-java8-installer', 'oracle-java8-set-default','docker', 'docker-engine', 'docker.io', 'haveged', 'accountsservice', 'network-manager-gnome', 'network-manager']

- name: Apt keys
  apt_key: url={{ item }} state=present
  with_items:
    - https://download.docker.com/linux/ubuntu/gpg
    - https://pkg.jenkins.io/debian/jenkins.io.key
    - https://repos.influxdata.com/influxdb.key
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

- name: Apt repos
  apt_repository: repo={{ item }} state=present
  with_items:
    - deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    - deb https://pkg.jenkins.io/debian binary/
    - deb https://repos.influxdata.com/debian stretch stable

- name: Base packages
  apt:
    name:
      - 'vim'
      - 'aptitude'
      - 'apt-transport-https'
      - 'ca-certificates'
      - 'curl'
      - 'software-properties-common'
      - 'docker-ce'
      - 'htop'
      - 'python-pip'
      - 'python3-pip'
      - 'maven'
      - 'python-passlib'
      - 'openvpn'
      - 'jenkins'
      - 'libzfs2linux'
      - 'zfs-doc'
      - 'zfs-zed'
      - 'zfsutils-linux'
      - 'zfs-auto-snapshot'
      - 'fail2ban'
      - 'telegraf'
    update_cache: yes
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

- name: one pip dep
  pip:
    name: ['pyopenssl']
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

- name: Install PhotoExport
  apt:
    state=present
    deb=https://github.com/ziobombo/PhotosExport/raw/mvn-repo/it/fraguglia/PhotosExport/1.17.0/PhotosExport-1.17.0.deb
  when: ansible_nodename == "cubo"
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

- name: docker-py (pip)
  pip:
    name: ['pip', 'docker', 'docker-compose']
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

- name: Ensure group "server0" exists
  group:
    name: server0
    state: present
    gid: 20000

- name: Ensure user "server0" exists
  user:
    name: server0
    uid: 20000
    group: server0
    home: /home/server0
    shell: /bin/bash

- name: Variables in sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  loop:
    - { name: 'net.core.rmem_max', value: '4194394' }
    - { name: 'net.core.wmem_max', value: '1048576' }
    - { name: 'net.ipv6.conf.all.disable_ipv6', value: '1' }
    - { name: 'net.ipv6.conf.default.disable_ipv6', value: '1' }
    - { name: 'net.ipv6.conf.lo.disable_ipv6', value: '1' }

- name: Allow 'server0' to do things...
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: 'server0 ALL=NOPASSWD: {{ item }}'
    validate: 'visudo -cf %s'
  with_items:
    - /usr/bin/apt
    - /bin/chown
    - /usr/bin/find
    - /usr/bin/docker

- name: Disable iscsid
  service:
    name: iscsid
    state: stopped
    enabled: no

- name: Jenkins running with the good user
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_USER'
    line: 'JENKINS_USER=server0'

- name: Jenkins running with the good group
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_GROUP'
    line: 'JENKINS_GROUP=server0'

- name: Jenkins optim 1
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_ARGS'
    line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT --handlerCountMax=30 --handlerCountMaxIdle=20"'

- name: Jenkins optim 2
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JAVA_ARGS'
    line: 'JAVA_ARGS="-Xmx128m -Djava.awt.headless=true -XX:+UseCompressedOops -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC  -XX:+UnlockExperimentalVMOptions"'

- name: Jenkins pointing to the right home
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_HOME'
    line: 'JENKINS_HOME=/home/server0/configuration/Jenkins'

- name: Rights of some Jenkins dirs
  file: path={{ item }} owner=server0 group=server0 recurse=true state=directory
  with_items:
    - /var/run/jenkins
    - /var/log/jenkins
    - /var/cache/jenkins

- name: Jenkins started
  service:
    name: jenkins
    state: started

- name: Template a file to /etc/telegraf/telegraf.conf
  template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
    owner: root
    group: root
    mode: '0644'

- name: Telegraf restarted
  service:
    name: telegraf
    state: restarted

- name: Create a new file system called myfs in pool rpool with the setuid property turned off
  zfs:
    name: rpool/myfs
    state: present
    extra_zfs_properties:
      - com.sun:auto-snapshot: true
      - com.sun:auto-snapshot:monthly: false
      - com.sun:auto-snapshot:weekly: false
      - com.sun:auto-snapshot:daily: true
      - com.sun:auto-snapshot:hourly: false
      - com.sun:auto-snapshot:frequent: false